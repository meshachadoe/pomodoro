{"version":3,"sources":["img/bith.png","img/yoda.png","img sync /^/.//.*$","components/landing.js","components/countdown.js","components/dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Landing","useState","welcomeText","setWelcome","loaded","setLoaded","setTimeout","className","to","Countdown","props","parseInt","duration","secondsLeft","setSecondsLeft","minutes","seconds","timeLeft","setTimeLeft","timer","setTimer","styles","backgroundColor","color","countdown","prevSecondsLeft","useEffect","setInterval","clearInterval","minutesTillEnd","Math","floor","style","mode","src","require","image","alt","type","Dashboard","App","basename","process","path","exact","component","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c21a82fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bith.55bb85a4.png\";","module.exports = __webpack_public_path__ + \"static/media/yoda.39f95198.png\";","var map = {\n\t\"./bith.png\": 116,\n\t\"./yoda.png\": 117\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 412;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../scss/landing.scss';\n\nfunction Landing() {\n\tconst [welcomeText, setWelcome] = useState('processing translation');\n\tconst [loaded, setLoaded] = useState(false);\n\n\tsetTimeout(() => {\n\t\tsetWelcome('welcome to mos eisley cantina');\n\t\tsetLoaded(true);\n\t}, 6000);\n\n\treturn (\n\t\t<div className='landing'>\n\t\t\t<h1>\n\t\t\t\tWelcome to Mos Eisley Cantina Welcome to Mos Eisley Cantina Welcome to\n\t\t\t\tMos Eisley Cantina\n\t\t\t</h1>\n\t\t\t<h2>{welcomeText}</h2>\n\t\t\t{loaded ? (\n\t\t\t\t<Link to='/dashboard'>\n\t\t\t\t\t<button>enter cantina</button>\n\t\t\t\t</Link>\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n\nexport default Landing;\n","import userEvent from '@testing-library/user-event';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../scss/countdown.scss';\n\nfunction Countdown(props) {\n\tconst [secondsLeft, setSecondsLeft] = useState(parseInt(props.duration));\n\tconst [timeLeft, setTimeLeft] = useState({ minutes: 0, seconds: 0 });\n\tconst [timer, setTimer] = useState(0);\n\tconst styles = {\n\t\tbackgroundColor: `${props.color}`,\n\t};\n\n\tuseEffect(() => {\n\t\tif (timer === 0 && secondsLeft > 0) {\n\t\t\tsetTimer(setInterval(countdown, 1000));\n\t\t}\n\t}, [timer]);\n\n\tuseEffect(() => {\n\t\tif (secondsLeft === 0) {\n\t\t\tclearInterval(timer);\n\t\t}\n\t\tconst minutesTillEnd = Math.floor(secondsLeft / 60);\n\t\tconst secondsTillEnd = secondsLeft % 60;\n\t\tsetTimeLeft({ minutes: minutesTillEnd, seconds: secondsTillEnd });\n\t}, [secondsLeft]);\n\n\tfunction countdown() {\n\t\tsetSecondsLeft((prevSecondsLeft) => {\n\t\t\treturn prevSecondsLeft - 1;\n\t\t});\n\t}\n\n\treturn (\n\t\t<div style={styles} className='countdown'>\n\t\t\t<Link to='/dashboard'>\n\t\t\t\t{props.mode === 'study' ? (\n\t\t\t\t\t<button className='nav-button'>leave yoda</button>\n\t\t\t\t) : (\n\t\t\t\t\t<button className='nav-button'>leave bar</button>\n\t\t\t\t)}\n\t\t\t</Link>\n\n\t\t\t<div className='countdown__timer'>\n\t\t\t\t<img\n\t\t\t\t\tsrc={require('../img/' + props.image)}\n\t\t\t\t\talt={'Star Wars Character'}\n\t\t\t\t/>\n\t\t\t\t<div>\n\t\t\t\t\t{props.mode === 'study' ? (\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\tremaining <br /> time to focus\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\ttime for <br /> a break\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{timeLeft.seconds >= 10 ? (\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t{timeLeft.minutes}:{timeLeft.seconds}\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t{timeLeft.minutes}:0{timeLeft.seconds}\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<footer>\n\t\t\t\t<p>\n\t\t\t\t\tcharacters owned by Star Wars.\n\t\t\t\t\t<br />i do not own any of the characters.\n\t\t\t\t</p>\n\t\t\t\t<button className='display-toggle'>\n\t\t\t\t\tdark mode\n\t\t\t\t\t<label className='switch'>\n\t\t\t\t\t\t<input type='checkbox' />\n\t\t\t\t\t\t<span className='slider round'></span>\n\t\t\t\t\t</label>\n\t\t\t\t</button>\n\t\t\t</footer>\n\t\t</div>\n\t);\n}\n\nexport default Countdown;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../scss/dashboard.scss';\n\nfunction Dashboard() {\n\treturn (\n\t\t<div className='dashboard'>\n\t\t\t<Link to='/'>\n\t\t\t\t<button className='nav-button'>leave cantina</button>\n\t\t\t</Link>\n\t\t\t<div className='dashboard__component__wrapper'>\n\t\t\t\t<div className='dashboard__component aqua'>\n\t\t\t\t\t<Link to='/study'>\n\t\t\t\t\t\t<img src={require('../img/yoda.png')} alt={'Star Wars Character'} />\n\t\t\t\t\t</Link>\n\t\t\t\t\t<h2>focus with yoda</h2>\n\t\t\t\t</div>\n\t\t\t\t<div className='dashboard__component orange'>\n\t\t\t\t\t<Link to='/break'>\n\t\t\t\t\t\t<img src={require('../img/bith.png')} alt={'Star Wars Character'} />\n\t\t\t\t\t</Link>\n\t\t\t\t\t<h2>chill at the bar</h2>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<footer>\n\t\t\t\t<p>\n\t\t\t\t\tcharacters owned by Star Wars.\n\t\t\t\t\t<br />i do not own any of the characters.\n\t\t\t\t</p>\n\t\t\t\t<button className='display-toggle'>\n\t\t\t\t\tdark mode\n\t\t\t\t\t<label className='switch'>\n\t\t\t\t\t\t<input type='checkbox' />\n\t\t\t\t\t\t<span className='slider round'></span>\n\t\t\t\t\t</label>\n\t\t\t\t</button>\n\t\t\t</footer>\n\t\t</div>\n\t);\n}\nexport default Dashboard;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Landing from './components/landing';\nimport Countdown from './components/countdown';\nimport Dashboard from './components/dashboard';\nimport './scss/app.scss';\n\nfunction App() {\n\treturn (\n\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t<div className='App'>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path='/' exact component={Landing} />\n\t\t\t\t\t<Route path='/dashboard' component={Dashboard} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath='/study'\n\t\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t\t<Countdown\n\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\tduration='1500'\n\t\t\t\t\t\t\t\tcolor='#63bfac'\n\t\t\t\t\t\t\t\tmode='study'\n\t\t\t\t\t\t\t\timage='yoda.png'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath='/break'\n\t\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t\t<Countdown\n\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\tduration='300'\n\t\t\t\t\t\t\t\tcolor='#E17E56'\n\t\t\t\t\t\t\t\tmode='break'\n\t\t\t\t\t\t\t\timage='bith.png'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</Switch>\n\t\t\t\t{/* <Countdown\n\t\t\t\t\tduration='1500'\n\t\t\t\t\tcolor='#63bfac'\n\t\t\t\t\tmode='study'\n\t\t\t\t\timage='yoda.png'\n\t\t\t\t/>\n\t\t\t\t<Countdown\n\t\t\t\t\tduration='300'\n\t\t\t\t\tcolor='#E17E56'\n\t\t\t\t\tmode='break'\n\t\t\t\t\timage='bith.png'\n\t\t\t\t/> */}\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}